{"version":3,"sources":["Components/NavBar/NavBar.js","Store/Action/CountActions.js","Components/Counts/TotalGraph.js","Components/Search/Search.js","Components/Counts/TotalTab.js","Components/Counts/Counts.js","Components/Search/SearchPage.js","DataRepo.js","Router/index.js","Components/WelcomePage/WelcomePage.js","Components/Pratice/Pratice_one.js","Components/HeplNo/HelpNumbers.js","hoc/Layout.js","App.js","serviceWorker.js","Store/Reducer/CountReducer.js","Store/Reducer/index.js","index.js","Images/Gif/1.gif","Images/Gif/2.gif","Images/Gif/3.gif","Images/Gif/4.gif","Images/Gif/5.gif","Images/Gif/6.gif","Images/facts/1.png","Images/facts/2.png","Images/facts/3.png","Images/facts/4.png","Images/facts/5.png","Images/facts/6.png","Images/facts/7.png","Images/facts/8.png","Images/facts/10.png"],"names":["NavBar","Navbar","fixed","collapseOnSelect","expand","bg","variant","to","Brand","Toggle","aria-controls","Collapse","id","className","Nav","link","map","list","key","Link","GetTotCountryCase","dispatch","axios","get","then","response","type","payload","data","catch","err","console","log","TotalGraph","props","totCountryCaseGet","options","chart","title","text","align","plotOptions","bar","columnWidth","colors","markers","size","xaxis","labels","show","categories","Object","values","sort","a","b","active","totCountry","country","tooltip","shared","intersect","x","legend","position","horizontalAlign","floating","offsetY","offsetX","series","name","deaths","recovered","width","height","connect","state","history","useHistory","useState","setCountry","useForm","register","handleSubmit","errors","useEffect","SearchHandel","push","pathname","search","Form","onSubmit","InputGroup","FormControl","placeholder","message","aria-label","aria-describedby","ref","required","pattern","value","slice","con","Append","Button","onClick","class","viewBox","fill","xmlns","fill-rule","d","clip-rule","TotalTab","countryData","setCountryData","Table","striped","bordered","hover","responsive","cd","cases","todayCases","todayDeaths","critical","tests","colSpan","totalCountGet","CountReducer","totallCounts","totCountryCounts","getTotalCounts","result","results","getTotCountryCase","actions","total","setTotal","Row","Col","tot","Card","style","Body","Text","total_active_cases","total_affected_countries","total_cases","total_deaths","total_new_cases_today","total_new_deaths_today","total_serious_cases","total_unresolved","total_recovered","Flags","setFlags","location","find","countryInfo","cc","marginTop","src","color","radialBar","startAngle","endAngle","hollow","margin","background","image","undefined","dataLabels","fontSize","useSeriesColors","formatter","seriesName","opts","w","globals","seriesIndex","itemMargin","vertical","breakpoint","Police_Ambulance","num","Hosital","Other_Services","covid_info","time","Who_message","language","path","component","Carousel","Item","Image","img1","alt","fluid","img2","rounded","img3","img4","img5","img6","lg","sm","fac1","fac2","fac3","fac4","fac5","fac6","fac7","fac8","fac10","exact","Counts","setOptions","setSeries","SearchPage","covidInfo","setCovidInfo","servicesf","setServices","policeAndAmbulance","setPoliceAndAmbulance","who_msg","setWho_msg","hospital","setHospital","Data","Title","covinfo","ListGroup","p","Header","as","h","Layout","callForRouters","routes","route","Container","paddingTop","App","Boolean","window","hostname","match","initState","hello","error","action","combineReducers","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.3dc740f5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\n\r\nexport default function NavBar() {\r\n  let navList = [\r\n    { to: \"/\", link: \"HomePage\" },\r\n    { to: \"/help\", link: \"Help Numbers\" },\r\n    { to: \"/counts\", link: \"Counts\" },\r\n  ];\r\n  return (\r\n    <Navbar fixed=\"top\" collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n      <Link to=\"/\">\r\n        <Navbar.Brand>Covit_news</Navbar.Brand>\r\n      </Link>\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse\r\n        id=\"responsive-navbar-nav\"\r\n        className=\"justify-content-end\"\r\n      >\r\n        <Nav>\r\n          {navList.map((list, key) => (\r\n            <Nav.Link key={key}>\r\n              <Link to={list.to}>{list.link}</Link>\r\n            </Nav.Link>\r\n          ))}\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\n\r\nexport let GetTotalCounts = () => {\r\n  return (dispatch) => {\r\n    axios\r\n      .get(\"https://thevirustracker.com/free-api?global=stats\")\r\n      .then((result) => {\r\n        // console.log(result);\r\n        dispatch({ type: \"GET_TOTAL_COUNTS\", payload: result.data.results });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        dispatch({ type: \"ERROR_COUNTS\", payload: err });\r\n      });\r\n  };\r\n};\r\nexport let GetTotCountryCase = () => {\r\n  return (dispatch) => {\r\n    axios\r\n      .get(\"https://corona.lmao.ninja/v2/countries?sort=country\")\r\n      .then((response) => {\r\n        // console.log(response.data);\r\n        dispatch({ type: \"GET_TOTAL_COUNTRY_CASE\", payload: response.data });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        dispatch({ type: \"ERROR_COUNTS\", payload: err });\r\n      });\r\n  };\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect, connectAdvanced } from \"react-redux\";\r\nimport * as actions from \"../../Store/Action\";\r\n//to import line chart\r\nimport Chart from \"react-apexcharts\";\r\nlet TotalGraph = (props) => {\r\n  return (\r\n    <>\r\n      {props.totCountryCaseGet && (\r\n        <Chart\r\n          options={{\r\n            chart: {\r\n              id: \"basic-bar\",\r\n            },\r\n            title: {\r\n              text: \"Covid Active Death Case\",\r\n              align: \"center\",\r\n            },\r\n            plotOptions: {\r\n              bar: {\r\n                columnWidth: \"20%\",\r\n              },\r\n            },\r\n            colors: [\"#B40404\", \"#000000\", \"#2EFE2E\"],\r\n            markers: {\r\n              size: 1,\r\n            },\r\n            xaxis: {\r\n              labels: {\r\n                show: true,\r\n              },\r\n\r\n              categories: Object.values(props.totCountryCaseGet)\r\n                .sort((a, b) => a.active - b.active)\r\n                .map((totCountry) => totCountry.country),\r\n            },\r\n            tooltip: {\r\n              shared: false,\r\n              intersect: true,\r\n              x: {\r\n                show: false,\r\n              },\r\n            },\r\n            legend: {\r\n              position: \"top\",\r\n              horizontalAlign: \"right\",\r\n              floating: true,\r\n              offsetY: -20,\r\n              offsetX: -5,\r\n            },\r\n          }}\r\n          series={[\r\n            {\r\n              name: \"active Case\",\r\n              data: Object.values(props.totCountryCaseGet)\r\n                .sort((a, b) => a.active - b.active)\r\n                .map((totCountry) => totCountry.active),\r\n            },\r\n            {\r\n              name: \"Death\",\r\n              data: Object.values(props.totCountryCaseGet)\r\n                .sort((a, b) => a.active - b.active)\r\n                .map((totCountry) => totCountry.deaths),\r\n            },\r\n            {\r\n              name: \"Recovered\",\r\n              data: Object.values(props.totCountryCaseGet)\r\n                .sort((a, b) => a.active - b.active)\r\n                .map((totCountry) => totCountry.recovered),\r\n            },\r\n          ]}\r\n          type=\"line\"\r\n          width=\"95%\"\r\n          height=\"400\"\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TotalGraph;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Form, InputGroup, FormControl, Button } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nlet Search = (props) => {\r\n  const history = useHistory();\r\n  const [country, setCountry] = useState([]);\r\n  const { register, handleSubmit, errors } = useForm();\r\n  useEffect(() => {\r\n    props.totCountryCaseGet &&\r\n      setCountry(\r\n        Object.values(props.totCountryCaseGet).sort((a, b) =>\r\n          a.country > b.country ? 1 : -1,\r\n        ),\r\n      );\r\n  }, [props.totCountryCaseGet]);\r\n  let SearchHandel = (data) => {\r\n    history.push({ pathname: `/search`, country: data.search });\r\n  };\r\n  return (\r\n    <Form onSubmit={handleSubmit(SearchHandel)} className={\"input-box\"}>\r\n      <InputGroup className=\"mb-3\">\r\n        <FormControl\r\n          placeholder={errors.search ? errors.search.message : \"Country name\"}\r\n          aria-label=\"Recipient's username\"\r\n          aria-describedby=\"basic-addon2\"\r\n          type=\"text\"\r\n          name=\"search\"\r\n          ref={register({\r\n            required: \"Country in required\",\r\n            pattern: {\r\n              value: /^[#.a-zA-Z\\s,-]{5,30}$/,\r\n              message: `Should contain Alphabetes `,\r\n            },\r\n          })}\r\n          list={\"locationList\"}\r\n        />\r\n        <datalist id={\"locationList\"}>\r\n          {\" \"}\r\n          {country &&\r\n            country\r\n              .slice()\r\n              .map((con, key) => <option value={con.country} key={key} />)}\r\n        </datalist>\r\n        <InputGroup.Append>\r\n          <Button\r\n            onClick={handleSubmit(SearchHandel)}\r\n            variant=\"outline-secondary\"\r\n          >\r\n            <svg\r\n              class=\"bi bi-search\"\r\n              width=\"1em\"\r\n              height=\"1em\"\r\n              viewBox=\"0 0 16 16\"\r\n              fill=\"currentColor\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                fill-rule=\"evenodd\"\r\n                d=\"M10.442 10.442a1 1 0 011.415 0l3.85 3.85a1 1 0 01-1.414 1.415l-3.85-3.85a1 1 0 010-1.415z\"\r\n                clip-rule=\"evenodd\"\r\n              />\r\n              <path\r\n                fill-rule=\"evenodd\"\r\n                d=\"M6.5 12a5.5 5.5 0 100-11 5.5 5.5 0 000 11zM13 6.5a6.5 6.5 0 11-13 0 6.5 6.5 0 0113 0z\"\r\n                clip-rule=\"evenodd\"\r\n              />\r\n            </svg>\r\n          </Button>\r\n        </InputGroup.Append>\r\n      </InputGroup>\r\n    </Form>\r\n  );\r\n};\r\nlet mapStateToProps = (state) => {\r\n  return {};\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Table } from \"react-bootstrap\";\r\nlet TotalTab = (props) => {\r\n  const [countryData, setCountryData] = useState(null);\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    props.totCountryCaseGet &&\r\n      setCountryData(\r\n        Object.values(props.totCountryCaseGet).sort((a, b) =>\r\n          a.country > b.country ? 1 : -1,\r\n        ),\r\n      );\r\n  }, [props.totCountryCaseGet]);\r\n  return (\r\n    <Table striped bordered hover variant=\"dark\" responsive>\r\n      <thead>\r\n        <tr>\r\n          <th>Update Data</th>\r\n          <th>Country</th>\r\n          <th>Case</th>\r\n          <th>Today Case</th>\r\n          <th>Deaths</th>\r\n          <th>Today Deaths</th>\r\n          <th>Recovered</th>\r\n          <th>Active</th>\r\n          <th>critical</th>\r\n          <th>Tests</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {countryData &&\r\n          countryData.map((cd, key) => (\r\n            <tr\r\n              className=\"pointer\"\r\n              onClick={() =>\r\n                history.push({ pathname: `/search`, country: cd.country })\r\n              }\r\n              key={key}\r\n            >\r\n              <td>{key}</td>\r\n              <td>{cd.country}</td>\r\n              <td>{cd.cases}</td>\r\n              <td>{cd.todayCases} </td>\r\n              <td>{cd.deaths}</td>\r\n              <td>{cd.todayDeaths}</td>\r\n              <td>{cd.recovered}</td>\r\n              <td>{cd.active}</td>\r\n              <td>{cd.critical}</td>\r\n              <td>{cd.tests}</td>\r\n            </tr>\r\n          ))}\r\n      </tbody>\r\n      <tfoot>\r\n        <tr>\r\n          <th colSpan=\"10\">\r\n            <center>The total Data</center>\r\n          </th>\r\n        </tr>\r\n      </tfoot>\r\n    </Table>\r\n  );\r\n};\r\nexport default TotalTab;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../Store/Action\";\r\nimport { Card, Row, Col } from \"react-bootstrap\";\r\nimport TotalGraph from \"./TotalGraph\";\r\nimport Search from \"../Search/Search\";\r\nimport TotalTab from \"./TotalTab\";\r\nlet Counts = (props) => {\r\n  const [total, setTotal] = useState([]);\r\n\r\n  //displatch to api\r\n  useEffect(() => {\r\n    props.getTotalCounts();\r\n    props.getTotCountryCase();\r\n  }, []);\r\n  //receiving the total data\r\n  useEffect(() => {\r\n    setTotal(props.totalCountGet);\r\n  }, [props.totalCountGet]);\r\n\r\n  return (\r\n    <div className={\"d-flex flex-column\"}>\r\n      <p className=\"lead display-4\">World Wide Count </p>\r\n\r\n      <Row>\r\n        <Col>\r\n          {total &&\r\n            total.map((tot, key) => (\r\n              <Card\r\n                bg=\"danger\"\r\n                text=\"white\"\r\n                key={key}\r\n                style={{ width: \"18rem\" }}\r\n              >\r\n                <Card.Body>\r\n                  <Card.Text>\r\n                    <div>TotalActive Cases: {tot.total_active_cases}</div>\r\n                    <div>\r\n                      Total Affected Countries :{tot.total_affected_countries}\r\n                    </div>{\" \"}\r\n                    <div>Total Cases :{tot.total_cases}</div>\r\n                    <div>Total Deaths :{tot.total_deaths}</div>\r\n                  </Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            ))}\r\n        </Col>\r\n        <Col>\r\n          {total &&\r\n            total.map((tot, key) => (\r\n              <Card\r\n                bg=\"warning\"\r\n                text=\"white\"\r\n                key={key}\r\n                style={{ width: \"18rem\" }}\r\n              >\r\n                <Card.Body>\r\n                  <Card.Text>\r\n                    <div>\r\n                      Total New Cases Today: {tot.total_new_cases_today}\r\n                    </div>\r\n                    <div>\r\n                      Total New Deaths Today :{tot.total_new_deaths_today}\r\n                    </div>\r\n                    <div>Total Serious Cases :{tot.total_serious_cases}</div>\r\n                    <div>Total Unresolved :{tot.total_unresolved}</div>\r\n                  </Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            ))}\r\n        </Col>\r\n        <Col>\r\n          {total &&\r\n            total.map((tot, key) => (\r\n              <Card\r\n                bg=\"success\"\r\n                text=\"white\"\r\n                key={key}\r\n                style={{ width: \"18rem\" }}\r\n              >\r\n                <Card.Body>\r\n                  <Card.Text>\r\n                    <div>Total Recovered: {tot.total_recovered}</div>\r\n                  </Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            ))}\r\n        </Col>\r\n      </Row>\r\n      <div className=\"my-3\">\r\n        <Search totCountryCaseGet={props.totCountryCaseGet} />\r\n      </div>\r\n      <div className=\"my-3\">\r\n        <TotalGraph totCountryCaseGet={props.totCountryCaseGet} />\r\n      </div>\r\n      <div className=\"my-3\">\r\n        <TotalTab totCountryCaseGet={props.totCountryCaseGet} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    totalCountGet: state.CountReducer.totallCounts,\r\n    totCountryCaseGet: state.CountReducer.totCountryCounts,\r\n  };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getTotalCounts: () => dispatch(actions.GetTotalCounts()),\r\n    getTotCountryCase: () => dispatch(actions.GetTotCountryCase()),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Counts);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Chart from \"react-apexcharts\";\r\nimport * as actions from \"../../Store/Action\";\r\nimport { Row, Col, Container } from \"react-bootstrap\";\r\nlet SearchPage = (props) => {\r\n  const [country, setCountry] = useState([]);\r\n  const [Flags, setFlags] = useState();\r\n  useEffect(() => {\r\n    console.log(props.location.country);\r\n    props.getTotCountryCase();\r\n  }, []);\r\n  useEffect(() => {\r\n    props.totCountryCaseGet &&\r\n      setCountry(\r\n        Object.values(props.totCountryCaseGet).find(\r\n          (country) => country.country == props.location.country,\r\n        ),\r\n      );\r\n  }, [props.totCountryCaseGet]);\r\n  useEffect(() => {\r\n    country.countryInfo &&\r\n      setFlags(Object.values(country.countryInfo).map((cc) => cc));\r\n  }, [country]);\r\n  return (\r\n    <>\r\n      {country && (\r\n        <Col className=\"d-flex flex-column\" style={{ marginTop: \"10px\" }}>\r\n          <Row style={{ marginTop: \"5px\" }}>\r\n            <Col>{Flags && <img src={Flags.slice(-1)} />}</Col>\r\n            <Col>\r\n              <p className=\"lead display-4\">{country.country}</p>\r\n              <p className=\"lead\">\r\n                Affected\r\n                <br />\r\n                <p className=\"lead\" style={{ color: \"red \" }}>\r\n                  {country.active}\r\n                </p>\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Chart\r\n            options={{\r\n              chart: {\r\n                height: 390,\r\n                type: \"radialBar\",\r\n              },\r\n              plotOptions: {\r\n                radialBar: {\r\n                  offsetY: 0,\r\n                  startAngle: 0,\r\n                  endAngle: 270,\r\n                  hollow: {\r\n                    margin: 5,\r\n                    size: \"30%\",\r\n                    background: \"transparent\",\r\n                    image: undefined,\r\n                  },\r\n                  dataLabels: {\r\n                    name: {\r\n                      show: false,\r\n                    },\r\n                    value: {\r\n                      show: false,\r\n                    },\r\n                  },\r\n                },\r\n              },\r\n              colors: [\r\n                \"#F45151\",\r\n                \"#CD0606\",\r\n                \"#A60606\",\r\n                \"#880707\",\r\n                \"#F88484\",\r\n                \"#FC3838\",\r\n                \"#F88484\",\r\n                \"#26FA3B\",\r\n              ],\r\n              labels: [\r\n                \"Tests\",\r\n                \"Cases\",\r\n                \"Active\",\r\n                \"Critical\",\r\n                \"Deaths\",\r\n                \"TodayCases\",\r\n                \"TodayDeaths\",\r\n                \"Recovered\",\r\n              ],\r\n              legend: {\r\n                show: true,\r\n                floating: true,\r\n                fontSize: \"16px\",\r\n                position: \"left\",\r\n                offsetX: 160,\r\n                offsetY: 15,\r\n                labels: {\r\n                  useSeriesColors: true,\r\n                },\r\n                markers: {\r\n                  size: 0,\r\n                },\r\n                formatter: function (seriesName, opts) {\r\n                  return (\r\n                    seriesName + \":  \" + opts.w.globals.series[opts.seriesIndex]\r\n                  );\r\n                },\r\n                itemMargin: {\r\n                  vertical: 3,\r\n                },\r\n              },\r\n              responsive: [\r\n                {\r\n                  breakpoint: 480,\r\n                  options: {\r\n                    legend: {\r\n                      show: false,\r\n                    },\r\n                  },\r\n                },\r\n              ],\r\n            }}\r\n            series={[\r\n              `${country.tests}`,\r\n              `${country.cases}`,\r\n              `${country.active}`,\r\n              `${country.critical}`,\r\n              `${country.deaths}`,\r\n              `${country.todayCases}`,\r\n              `${country.todayDeaths}`,\r\n              `${country.recovered}`,\r\n            ]}\r\n            type=\"radialBar\"\r\n            height=\"390\"\r\n          />\r\n        </Col>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    totCountryCaseGet: state.CountReducer.totCountryCounts,\r\n  };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getTotCountryCase: () => dispatch(actions.GetTotCountryCase()),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchPage);\r\n","export let Police_Ambulance = [\r\n  { name: \"Police Control\", num: \"100\" },\r\n  { name: \"Police Emergency\", num: \"4228435\" },\r\n  { name: \"Metropolitan Police Range (Kathmandu)\", num: \"4261945/4261790\" },\r\n  { name: \"Metropolitan Police Range (Lalitpur)\", num: \"5521207\" },\r\n  { name: \"Metropolitan Police Range (Bhaktapur)\", num: \"6614821\" },\r\n  { name: \"Paropakar Ambulance Service\", num: \"4260859\" },\r\n  { name: \"Lalitpur Redcross Ambulance Service\", num: \"5545666\" },\r\n  { name: \"Bishal Bazar Ambulance Service\", num: \"4244121\" },\r\n  { name: \"Redcross Ambulance Service\", num: \"4228094\" },\r\n];\r\n\r\nexport let Hosital = [\r\n  { name: \"Nepal Eye Bank\", num: \" \t4493684\" },\r\n  { name: \"Nepal Eye Hospital\", num: \" \t4250691\" },\r\n  { name: \"Tilganga Eye Hospital\", num: \" \t4423684\" },\r\n  { name: \"Bir Hospital\", num: \" \t4223807/4221988\" },\r\n  { name: \"Nepal Police Hospital\", num: \" \t4412430/4412530/4412630\" },\r\n  { name: \"TU Teaching Hospital\", num: \" \t4412404/4412505\" },\r\n  { name: \"Maternity Hospital\", num: \" \t4253276\" },\r\n  { name: \"Teku Hospital\", num: \" 4253396\" },\r\n  { name: \"Patan Hospital\", num: \" \t5522278/5522266\" },\r\n  { name: \"Bhaktapur Hospital\", num: \" \t6610676\" },\r\n  { name: \"Mental Hospital\", num: \" \t5521333\" },\r\n  { name: \"Kanti Children Hospital\", num: \" \t4414798/4427452\" },\r\n  { name: \"Kathmandu Model Hospital\", num: \" \t4240805\" },\r\n  { name: \"B&B Hospital\", num: \" \t5533206\" },\r\n  { name: \"Medicare National Hospital\", num: \" \t4467067\" },\r\n  { name: \"Medicare National Hospital-Ambulance\", num: \" \t4467067\" },\r\n  { name: \"Nepal Orthopaedic Hospital\", num: \" 4493725\" },\r\n  {\r\n    name: \"Kathmandu Medical College (Teaching Hospital - Sinamangal)\",\r\n    num: \" \t4476152\",\r\n  },\r\n  {\r\n    name: \"Nepal Medical College (Teaching Hospital - Jorpati)\",\r\n    num: \" 4486008\",\r\n  },\r\n  { name: \"Kantipur Dental Hospital, Maharajgunj\", num: \" \t4371603\" },\r\n  { name: \"Kantipur Hospital, New Baneshwor\", num: \" \t4498757\" },\r\n  { name: \"Hospital and Research Centre\", num: \" \t4476225\" },\r\n  { name: \"Norvic Hospital\", num: \" 4258554\" },\r\n  { name: \"Martyr Gangalal National Heart Centre\", num: \" 4371322/4371374\" },\r\n  { name: \"Life Care Hospital\", num: \" 4227735\" },\r\n  { name: \"Miteri Hospital\", num: \" 4280555/4222305\" },\r\n  { name: \"Capital Hospital\", num: \" \t4244022\" },\r\n];\r\nexport let Other_Services = [\r\n  { name: \"Shree Satya Sai Centre\", num: \"4498035\" },\r\n  { name: \"Bhaktapur Redcross\", num: \"6612266\" },\r\n  { name: \"National KidneyCentre\", num: \"4429866/4426016\" },\r\n  { name: \"Fire Brigade\", num: \"101\" },\r\n  { name: \"Blood Bank\", num: \"4225344\" },\r\n];\r\n\r\nexport let covid_info = [\r\n  {\r\n    name: \"Doctors\",\r\n    num: \"9851255839 / 9851255837 / 9851255834\",\r\n    time: \"8AM - 8PM.\",\r\n  },\r\n  {\r\n    name: \"Covid new Infornation\",\r\n    num: \"1115 /1133 \",\r\n    time: \"6am to 10pm\",\r\n  },\r\n];\r\nexport let Who_message = [\r\n  {\r\n    language: \"Nepal\",\r\n    Text: \"hi\",\r\n    num: \"+41 79 8931892\",\r\n  },\r\n  {\r\n    language: \"Arabic\",\r\n    Text: \"مرحبا\",\r\n    num: \"+41 22 501 70 23\",\r\n  },\r\n  {\r\n    language: \"English\",\r\n    Text: \"hi\",\r\n    num: \"+41 79 8931892\",\r\n  },\r\n  {\r\n    language: \"French\",\r\n    Text: \"salut\",\r\n    num: \"+41 22 501 72 98\",\r\n  },\r\n  {\r\n    language: \"Hindi\",\r\n    Text: \"नमस्ते\",\r\n    num: \"+41 22 501 73 41\",\r\n  },\r\n  {\r\n    language: \"Italian\",\r\n    Text: \"ciao\",\r\n    num: \"+41 22 501 78 34 \",\r\n  },\r\n  {\r\n    language: \"Spanish\",\r\n    Text: \"hola\",\r\n    num: \"+41 22 501 76 90\",\r\n  },\r\n  {\r\n    language: \"Portuguese\",\r\n    Text: \"oi\",\r\n    num: \" +41 22 501 77 35\",\r\n  },\r\n];\r\n","import WelcomePage from \"../Components/WelcomePage/WelcomePage\";\r\nimport Counts from \"../Components/Counts/Counts\";\r\nimport Pratice_one from \"../Components/Pratice/Pratice_one\";\r\nimport SearchPage from \"../Components/Search/SearchPage\";\r\nimport HelpNumbers from \"../Components/HeplNo/HelpNumbers\";\r\n\r\nexport default [\r\n  { path: \"/\", component: WelcomePage, exact: true },\r\n  { path: \"/counts\", component: Counts, exact: true },\r\n  { path: \"/p\", component: Pratice_one, exact: true },\r\n  { path: \"/search\", component: SearchPage, exact: true },\r\n  { path: \"/help\", component: HelpNumbers, exact: true },\r\n];\r\n","import React from \"react\";\r\nimport img1 from \"../../Images/Gif/1.gif\";\r\nimport img2 from \"../../Images/Gif/2.gif\";\r\nimport img3 from \"../../Images/Gif/3.gif\";\r\nimport img4 from \"../../Images/Gif/4.gif\";\r\nimport img5 from \"../../Images/Gif/5.gif\";\r\nimport img6 from \"../../Images/Gif/6.gif\";\r\nimport fac1 from \"../../Images/facts/1.png\";\r\nimport fac2 from \"../../Images/facts/2.png\";\r\nimport fac3 from \"../../Images/facts/3.png\";\r\nimport fac4 from \"../../Images/facts/4.png\";\r\nimport fac5 from \"../../Images/facts/5.png\";\r\nimport fac6 from \"../../Images/facts/6.png\";\r\nimport fac7 from \"../../Images/facts/7.png\";\r\nimport fac8 from \"../../Images/facts/8.png\";\r\nimport fac10 from \"../../Images/facts/10.png\";\r\n\r\nimport { CardColumns, Card, Carousel, Image, Row, Col } from \"react-bootstrap\";\r\n\r\nexport default function WelcomePage() {\r\n  return (\r\n    <>\r\n      <Carousel>\r\n        <Carousel.Item>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Image\r\n              className=\"d-block w-200 m-3\"\r\n              width={455}\r\n              src={img1}\r\n              alt=\"First slide\"\r\n              fluid\r\n            />\r\n            <Image\r\n              className=\"d-block w-200 m-3\"\r\n              width={455}\r\n              src={img2}\r\n              alt=\"First slide\"\r\n              rounded\r\n            />\r\n          </Row>\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Image\r\n              className=\"d-block w-200 m-3\"\r\n              width={455}\r\n              src={img3}\r\n              alt=\"First slide\"\r\n              fluid\r\n            />\r\n            <Image\r\n              className=\"d-block w-200 m-3\"\r\n              width={455}\r\n              src={img4}\r\n              alt=\"First slide\"\r\n              rounded\r\n            />\r\n          </Row>\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Image\r\n              className=\"d-block w-200 m-3\"\r\n              width={455}\r\n              src={img5}\r\n              alt=\"First slide\"\r\n              fluid\r\n            />\r\n            <Image\r\n              className=\"d-block w-200 m-3\"\r\n              width={455}\r\n              src={img6}\r\n              alt=\"First slide\"\r\n              rounded\r\n            />\r\n          </Row>\r\n        </Carousel.Item>\r\n      </Carousel>\r\n      <p className=\"lead display-4\">Some Facts By WHO</p>\r\n      <div>\r\n        <Row lg={true}>\r\n          <Col sm={8}>\r\n            <Image\r\n              rounded\r\n              className=\"d-block w-200 m-3\"\r\n              width={\"100%\"}\r\n              height={385}\r\n              src={fac1}\r\n              alt=\"First slide\"\r\n            />\r\n          </Col>\r\n          <Col sm={4}>\r\n            <Image\r\n              rounded\r\n              className=\"d-block w-200 m-3\"\r\n              src={fac2}\r\n              width={\"100%\"}\r\n              height={385}\r\n              alt=\"First slide\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col sm={4}>\r\n            <Image\r\n              rounded\r\n              className=\"d-block w-200 m-3\"\r\n              width={\"100%\"}\r\n              height={385}\r\n              src={fac3}\r\n              alt=\"First slide\"\r\n            />\r\n          </Col>\r\n          <Col sm={4}>\r\n            <Image\r\n              rounded\r\n              className=\"d-block w-200 m-3\"\r\n              src={fac4}\r\n              width={\"100%\"}\r\n              height={385}\r\n              alt=\"First slide\"\r\n            />\r\n          </Col>\r\n          <Col sm={4}>\r\n            <Image\r\n              rounded\r\n              className=\"d-block w-200 m-3\"\r\n              src={fac5}\r\n              width={\"100%\"}\r\n              height={385}\r\n              alt=\"First slide\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col sm={4}>\r\n            <Image\r\n              rounded\r\n              className=\"d-block w-200 m-3\"\r\n              width={\"100%\"}\r\n              height={385}\r\n              src={fac6}\r\n              alt=\"First slide\"\r\n            />\r\n          </Col>\r\n          <Col sm={8}>\r\n            <Image\r\n              rounded\r\n              className=\"d-block w-200 m-3\"\r\n              src={fac7}\r\n              width={\"100%\"}\r\n              height={385}\r\n              alt=\"First slide\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col sm={6}>\r\n            <Image\r\n              rounded\r\n              className=\"d-block w-200 m-3\"\r\n              width={\"100%\"}\r\n              height={385}\r\n              src={fac8}\r\n              alt=\"First slide\"\r\n            />\r\n          </Col>\r\n          <Col sm={6}>\r\n            <Image\r\n              rounded\r\n              className=\"d-block w-200 m-3\"\r\n              src={fac10}\r\n              width={\"100%\"}\r\n              height={385}\r\n              alt=\"First slide\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\nexport default function Pratice_one() {\r\n  const [list, setList] = useState([]);\r\n  const [options, setOptions] = useState();\r\n  const [series, setSeries] = useState();\r\n  useEffect(async () => {\r\n    await setOptions({\r\n      chart: {\r\n        id: \"basic-bar\",\r\n      },\r\n      xaxis: {\r\n        categories: [1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999],\r\n      },\r\n    });\r\n    setSeries({\r\n      name: \"series-1\",\r\n      data: [30, 40, 45, 50, 49, 60, 70, 91],\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"row\">\r\n        <div className=\"mixed-chart\">\r\n          <h1>hellos</h1>\r\n          <Chart\r\n            options={{ options }}\r\n            series={[series]}\r\n            type=\"bar\"\r\n            width=\"500\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Row, Col, Card, ListGroup } from \"react-bootstrap\";\r\nimport * as Data from \"../../DataRepo\";\r\n\r\nlet HelpNumbers = () => {\r\n  const [covidInfo, setCovidInfo] = useState([]);\r\n  const [servicesf, setServices] = useState([]);\r\n  const [policeAndAmbulance, setPoliceAndAmbulance] = useState([]);\r\n  const [who_msg, setWho_msg] = useState([]);\r\n  const [hospital, setHospital] = useState([]);\r\n  useEffect(() => {\r\n    setCovidInfo(Data.covid_info);\r\n    setServices(Data.Other_Services);\r\n    setPoliceAndAmbulance(Data.Police_Ambulance);\r\n    setWho_msg(Data.Who_message);\r\n    setHospital(Data.Hosital);\r\n  }, []);\r\n  return (\r\n    <Col>\r\n      <p className=\"lead display-4\">\r\n        Phone numbers of Covid Info and Service centers\r\n      </p>\r\n      <Row className={\"m-3\"}>\r\n        <Col>\r\n          <Row>\r\n            <Card style={{ width: \"25rem\" }}>\r\n              <Card.Body>\r\n                <Card.Title>Covid Information</Card.Title>\r\n\r\n                <Card style={{ width: \"23rem\" }}>\r\n                  {covidInfo.map((covinfo, key) => (\r\n                    <ListGroup variant=\"flush\" key={key}>\r\n                      <ListGroup.Item>\r\n                        <div>{covinfo.name}</div>\r\n                        <div>{covinfo.num}</div>\r\n                        <div>{covinfo.time}</div>\r\n                      </ListGroup.Item>\r\n                    </ListGroup>\r\n                  ))}\r\n                </Card>\r\n              </Card.Body>\r\n            </Card>\r\n          </Row>\r\n        </Col>\r\n        <Col>\r\n          <Card style={{ width: \"25rem\" }}>\r\n            <Card.Body>\r\n              <Card.Title>Services </Card.Title>\r\n              <Card style={{ width: \"23rem\" }}>\r\n                {servicesf.map((covinfo, key) => (\r\n                  <ListGroup variant=\"flush\" key={key}>\r\n                    <ListGroup.Item>\r\n                      <div>{covinfo.name}</div>\r\n                      <div>{covinfo.num}</div>\r\n                    </ListGroup.Item>\r\n                  </ListGroup>\r\n                ))}\r\n              </Card>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      <p className=\"lead display-4\">Phone numbers of Police and Ambulance</p>\r\n      <Row>\r\n        {policeAndAmbulance.map((p, key) => (\r\n          <Col className={\"m-3\"}>\r\n            <div>\r\n              <Card bg=\"success\" text=\"white\" style={{ width: \"18rem\" }}>\r\n                <Card.Header>{p.name}</Card.Header>\r\n                <Card.Body>\r\n                  <Card.Text>\r\n                    <div>{p.num}</div>\r\n                  </Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            </div>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n      <p className=\"lead display-4\">WHO WhatsApp information</p>\r\n      <Row>\r\n        <Col>\r\n          {who_msg.map((w, key) => (\r\n            <Card style={{ marginTop: \"5px\" }}>\r\n              <Card.Header as=\"h4\">{w.language}</Card.Header>\r\n              <Card.Body>\r\n                <Card.Text>\r\n                  <div>\r\n                    send WHO a WhatsApp text. Text {w.Text} to {w.num}\r\n                  </div>\r\n                </Card.Text>\r\n              </Card.Body>\r\n            </Card>\r\n          ))}\r\n        </Col>\r\n      </Row>\r\n      <p className=\"lead display-4\">All hospital Numbers</p>\r\n      <Row>\r\n        {hospital.map((h, key) => (\r\n          <Col className={\"m-3\"}>\r\n            <div>\r\n              <Card bg=\"success\" text=\"white\" style={{ width: \"18rem\" }}>\r\n                <Card.Header>{h.name}</Card.Header>\r\n                <Card.Body>\r\n                  <Card.Text>\r\n                    <div>{h.num}</div>\r\n                  </Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            </div>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </Col>\r\n  );\r\n};\r\nexport default HelpNumbers;\r\n","import React from \"react\";\r\nimport NavBar from \"../Components/NavBar/NavBar\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport routes from \"../Router\";\r\nimport { Container } from \"react-bootstrap\";\r\nlet Layout = () => {\r\n  let callForRouters = routes.map((route, key) => (\r\n    <Route\r\n      key={key}\r\n      path={route.path}\r\n      component={route.component}\r\n      exact={route.exact}\r\n    />\r\n  ));\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <Container style={{ paddingTop: \"50px\" }}>\r\n        <Switch>{callForRouters}</Switch>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\nexport default Layout;\r\n","import React from \"react\";\nimport Layout from \"./hoc/Layout\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n  return (\n    <div>\n      <Layout />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","let initState = {\r\n  totallCounts: [],\r\n  hello: [],\r\n  error: false,\r\n  totCountryCounts: [],\r\n};\r\n\r\nlet CountReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"GET_TOTAL_COUNTS\":\r\n      return { ...state, totallCounts: action.payload };\r\n    case \"ERROR_COUNTS\":\r\n      return { ...state, error: true };\r\n    case \"GET_TOTAL_COUNTRY_CASE\":\r\n      return { ...state, totCountryCounts: action.payload };\r\n    default:\r\n      return { state };\r\n  }\r\n};\r\n\r\nexport default CountReducer;\r\n","import CountReducer from \"./CountReducer\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport default combineReducers({\r\n  CountReducer,\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\n//for redux\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport reducer from \"./Store/Reducer\";\n\nconst middleware = [thunk];\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducer,\n  composeEnhancers(applyMiddleware(...middleware)),\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\"),\n);\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/1.f63e0219.gif\";","module.exports = __webpack_public_path__ + \"static/media/2.56b9bead.gif\";","module.exports = __webpack_public_path__ + \"static/media/3.84061fc7.gif\";","module.exports = __webpack_public_path__ + \"static/media/4.ad846c92.gif\";","module.exports = __webpack_public_path__ + \"static/media/5.f53bcdb8.gif\";","module.exports = __webpack_public_path__ + \"static/media/6.7bab1a78.gif\";","module.exports = __webpack_public_path__ + \"static/media/1.a19da44b.png\";","module.exports = __webpack_public_path__ + \"static/media/2.e8224063.png\";","module.exports = __webpack_public_path__ + \"static/media/3.578de0ef.png\";","module.exports = __webpack_public_path__ + \"static/media/4.bee207ef.png\";","module.exports = __webpack_public_path__ + \"static/media/5.e8ebc6d6.png\";","module.exports = __webpack_public_path__ + \"static/media/6.9d0c5399.png\";","module.exports = __webpack_public_path__ + \"static/media/7.ff2538bc.png\";","module.exports = __webpack_public_path__ + \"static/media/8.9e960e67.png\";","module.exports = __webpack_public_path__ + \"static/media/10.2223c2ca.png\";"],"sourceRoot":""}